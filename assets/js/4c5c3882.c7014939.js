"use strict";(self.webpackChunkgrid_docs=self.webpackChunkgrid_docs||[]).push([[4419],{3905:function(e,t,a){a.d(t,{Zo:function(){return l},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),d=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(a),m=n,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return a?r.createElement(g,o(o({ref:t},l),{},{components:a})):r.createElement(g,o({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var d=2;d<i;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8538:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return l},default:function(){return u}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=["components"],s={description:"This tutorial shows how to train a forecasting model in PyTorch"},c="Coin Market Cap Price Forecasting",d={unversionedId:"examples/time-series/price-forecasting",id:"examples/time-series/price-forecasting",title:"Coin Market Cap Price Forecasting",description:"This tutorial shows how to train a forecasting model in PyTorch",source:"@site/docs/examples/time-series/price-forecasting.md",sourceDirName:"examples/time-series",slug:"/examples/time-series/price-forecasting",permalink:"/examples/time-series/price-forecasting",editUrl:"https://github.com/gridai/grid-docs/edit/master/docs/examples/time-series/price-forecasting.md",tags:[],version:"current",lastUpdatedAt:1645213705,formattedLastUpdatedAt:"2/18/2022",frontMatter:{description:"This tutorial shows how to train a forecasting model in PyTorch"}},l=[{value:"Goal",id:"goal",children:[{value:"Step 1: Create Your Dataset",id:"step-1-create-your-dataset",children:[],level:3},{value:"Step 2: Train Your Model on Grid AI",id:"step-2-train-your-model-on-grid-ai",children:[{value:"Bonus: Run a Hyperparameter Sweep",id:"bonus-run-a-hyperparameter-sweep",children:[],level:4}],level:3},{value:"Attribution",id:"attribution",children:[],level:3}],level:2}],p={toc:l};function u(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"coin-market-cap-price-forecasting"},"Coin Market Cap Price Forecasting"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://platform.grid.ai/#/runs?script=https://github.com/gridai/gridai-timeseries-forecasting-demo/blob/fa48c4b5ae58f40263ad98d5fbc06fce92db11a4/train.py&cloud=grid&instance=g4dn.xlarge&accelerators=1&disk_size=200&framework=lightning&script_args=grid%20run%20--grid_config%20.grid%2Fconfig.yml%20train.py%20--max_epochs%20100%20--data_path%20%2Fdataset%2Fcryptocurrency_prices.csv%20--learning_rate%20%27uniform%280%2C0.03%2C5%29%27%20--hidden_size%20%27%5B16%2C32%2C64%5D"},(0,i.kt)("img",{parentName:"a",src:"https://camo.githubusercontent.com/1b39d1721301ebc3d08db0971e6d4dd96db28d8028daff32eb3918e22cd1fbe0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7269645f41492d72756e2d3738464639362e7376673f6c6162656c436f6c6f723d626c61636b266c6f676f3d646174613a696d6167652f737667253262786d6c3b6261736536342c50484e325a79423361575230614430694e4467694947686c6157646f644430694e44676949475a7062477739496d3576626d5569494868746247357a50534a6f644852774f693876643364334c6e637a4c6d39795a7938794d4441774c334e325a79492b50484268644767675a443069545445674d5452324d6a42684d5451674d5451674d4341774d4445304944453061446c574d7a59754f4567784d693432566a4578614449794c6a56324e3267784d533479566a45305154453049444530494441674d44417a4d693430494442494d5456424d5451674d5451674d4341774d4445674d5452364969426d615778735053496a5a6d5a6d4969382b50484268644767675a44306954544d314c6a49674e44686f4d5445754d6c59794e5334315344497a4c6a6c324d5445754d3267784d53347a566a5134656949675a6d6c736244306949325a6d5a694976506a777663335a6e50673d3d",alt:"Grid"}))),(0,i.kt)("h2",{id:"goal"},"Goal"),(0,i.kt)("p",null,"We show how to create a model that learns how to forecast the next N observations of a timeseries."),(0,i.kt)("p",null,"In this example, we will be creating a model that predicts future cryptocurrency values."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This tutorial uses ",(0,i.kt)("strong",{parentName:"p"},"PyTorch Forecasting")))),(0,i.kt)("h3",{id:"step-1-create-your-dataset"},"Step 1: Create Your Dataset"),(0,i.kt)("p",null,"Our dataset is quite simple: it's a CSV file with the following structure :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"time_idx,Symbol,Date,High,Low,Open,Close,Volume,Marketcap\n1,ADA,2017-10-02 23:59:59,0.0300877001136541,0.0199692994356155,0.0246070008724927,0.0259317997843027,57641300.0,628899051.78\n2,ADA,2017-10-03 23:59:59,0.0274251997470855,0.0206898991018533,0.025756599381566,0.0208158008754253,16997800.0,539692714.905\n")),(0,i.kt)("p",null,"We will training a series of models on Grid. Now, in order to make the process of updating the dataset easier we will be creating a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.grid.ai/products/add-data-to-grid-datastores"},"Grid Datastore"),". Datstores are collections of files that are versioned and can be mounted anywhere in the experiment context."),(0,i.kt)("p",null,"We'll be creating a new Datastore using the Grid CLI with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"$ grid datastores create --name crypto_prices --source data/\nupload \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.0%\n\u2714 Finished uploading datastore.\n")),(0,i.kt)("p",null,"Then check that your datsatore is ready to use by calling ",(0,i.kt)("inlineCode",{parentName:"p"},"grid datastores list"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"$ grid datstores list\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Credential Id \u2503                Name \u2503 Version \u2503     Size \u2503          Created \u2503    Status \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 cc-grv4f      \u2502       crypto_prices \u2502       1 \u2502  12.6 MB \u2502 2021-05-20 01:17 \u2502 Succeeded \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,i.kt)("p",null,"Whenever your datastore has ",(0,i.kt)("inlineCode",{parentName:"p"},"Status")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"Succeeded")," you are ready to go on training."),(0,i.kt)("h3",{id:"step-2-train-your-model-on-grid-ai"},"Step 2: Train Your Model on Grid AI"),(0,i.kt)("p",null,"You are now ready to train your model on Grid."),(0,i.kt)("p",null,"We'll be using the CLI but you can do the same thing by using the web UI. We have placed a configuration file locally ","(",(0,i.kt)("inlineCode",{parentName:"p"},".grid/config.yml"),")"," that you can use as reference instead of passing all the parameters to the CLI manually."),(0,i.kt)("p",null,"This is the script we will be using: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/gridai/gridai-timeseries-forecasting-demo"},"https://github.com/gridai/gridai-timeseries-forecasting-demo")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'$ grid run --config .grid/config.yml \\\n           train.py \\\n           --max_epochs 100 \\\n           --data_path /dataset/cryptocurrency_prices.csv \\\n           --learning_rate "uniform(0,0.03,5)" \\\n           --hidden_size "[16,32,64]"\n\nNo --name passed, naming your run glossy-manatee-255\nUsing default cloud credentials cc-bwhth to run on AWS.\n\n                Run submitted!\n                `grid status` to list all runs\n                `grid status glossy-manatee-255` to see all experiments for this run\n\n                ----------------------\n                Submission summary\n                ----------------------\n                script:                  train.py\n                instance_type:           g4dn.xlarge\n                distributed:             False\n                use_spot:                True\n                cloud_provider:          aws\n                cloud_credentials:       cc-bwhth\n                grid_name:               glossy-manatee-255\n                datastore_name:          crypto_prices\n                datastore_version:       1\n                datastore_mount_dir:     /dataset\n')),(0,i.kt)("h4",{id:"bonus-run-a-hyperparameter-sweep"},"Bonus: Run a Hyperparameter Sweep"),(0,i.kt)("p",null,"Grid AI makes it trivial to run a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.grid.ai/products/global-cli-configs/cli-api/grid-train#hyperparameter-sweeps"},"hyperparameter sweep")," without having to change anything in your scripts. Let's experiment with a number of different learning rates for our model:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'$ grid run --config .grid/config.yml \\\n           train.py --max_epochs 100 \\\n           --data_path /dataset/cryptocurrency_prices.csv \\\n           --learning_rate "uniform(0,0.03,5)" \\\n           --hidden_size "[16,32,64]"\n')),(0,i.kt)("p",null,"That will generate 15 experiments with different learning rate combinations."),(0,i.kt)("h3",{id:"attribution"},"Attribution"),(0,i.kt)("p",null,"This project relies heavily on the ",(0,i.kt)("a",{parentName:"p",href:"https://pytorch-forecasting.readthedocs.io/en/latest"},"PyTorch Forecasting")," package. The implementation adapts from their documentation and tutorials."),(0,i.kt)("p",null,"The dataset used in this demo comes from ",(0,i.kt)("a",{parentName:"p",href:"https://coinmarketcap.com/"},"CoinMarketCap"),", a cryptocurrency price-tracking service. We have downloaded a processed version of the data available on this ",(0,i.kt)("a",{parentName:"p",href:"https://www.kaggle.com/sudalairajkumar/cryptocurrencypricehistory"},"Kaggle page"),"."))}u.isMDXComponent=!0}}]);
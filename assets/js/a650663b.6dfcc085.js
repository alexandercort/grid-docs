"use strict";(self.webpackChunkgrid_docs=self.webpackChunkgrid_docs||[]).push([[4324],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(a),u=r,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||i;return a?n.createElement(g,o(o({ref:t},p),{},{components:a})):n.createElement(g,o({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4072:function(e,t,a){var n=a(7294);t.Z=function(e){return n.createElement("video",{width:"100%",height:"320",controls:!0},n.createElement("source",{src:e.src,type:"video/mp4"}))}},4280:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return m},default:function(){return u}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=a(4072),s=["components"],l={description:"Tutorial shows example of using Datastores and Sessions"},c="ImageNet classification",p={unversionedId:"examples/vision/image-classification-with-imagenet",id:"examples/vision/image-classification-with-imagenet",title:"ImageNet classification",description:"Tutorial shows example of using Datastores and Sessions",source:"@site/docs/examples/vision/image-classification-with-imagenet.md",sourceDirName:"examples/vision",slug:"/examples/vision/image-classification-with-imagenet",permalink:"/examples/vision/image-classification-with-imagenet",editUrl:"https://github.com/gridai/grid-docs/tree/main/docs/examples/vision/image-classification-with-imagenet.md",tags:[],version:"current",lastUpdatedAt:1644538946,formattedLastUpdatedAt:"2/11/2022",frontMatter:{description:"Tutorial shows example of using Datastores and Sessions"}},m=[{value:"Goal",id:"goal",children:[],level:2},{value:"Tutorial time",id:"tutorial-time",children:[],level:2},{value:"ImageNet",id:"imagenet",children:[],level:2},{value:"Step 1: Get ImageNet",id:"step-1-get-imagenet",children:[{value:"A: Start an Interactive Session",id:"a-start-an-interactive-session",children:[],level:3},{value:"B: Open JupyterLab on the Session",id:"b-open-jupyterlab-on-the-session",children:[],level:3},{value:"<strong>C: Download ImageNet</strong>",id:"c-download-imagenet",children:[],level:3},{value:"<strong>C: Process ImageNet</strong>",id:"c-process-imagenet",children:[],level:3}],level:2},{value:"Step 2: ImageNet Datastore",id:"step-2-imagenet-datastore",children:[{value:"From a Session",id:"from-a-session",children:[],level:3},{value:"From cluster or own machine",id:"from-cluster-or-own-machine",children:[{value:"Open your terminal and start a screen session.",id:"open-your-terminal-and-start-a-screen-session",children:[],level:4}],level:3}],level:2},{value:"The Model",id:"the-model",children:[],level:2}],d={toc:m};function u(e){var t=e.components,l=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"imagenet-classification"},"ImageNet classification"),(0,i.kt)("h2",{id:"goal"},"Goal"),(0,i.kt)("p",null,"This tutorial shows scalable workflows motivated by building a classifier to train on the ImageNet dataset"),(0,i.kt)("p",null,"In this tutorial you'll:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create an ImageNet ",(0,i.kt)("strong",{parentName:"li"},"DATASTORE")),(0,i.kt)("li",{parentName:"ul"},"Use a ",(0,i.kt)("strong",{parentName:"li"},"SESSION")," for creating the datastore and to prototype the model"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"RUN")," a sweep of a classifier over ImageNet")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This tutorial uses ",(0,i.kt)("strong",{parentName:"p"},"PyTorch Lightning")))),(0,i.kt)("h2",{id:"tutorial-time"},"Tutorial time"),(0,i.kt)("p",null,"There's a lot of waiting around for data downloads and uploads, but everything else takes just a few minutes."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"2 minutes"),"   if you have an ImageNet Datastore"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"2 hours    if you need to create an ImageNet datastore ","(","depends on the speed of your internet connection",")"))),(0,i.kt)("li",{parentName:"ul"},"+6 hours     if you need to download and process ImageNet")),(0,i.kt)("h2",{id:"imagenet"},"ImageNet"),(0,i.kt)("p",null,"ImageNet is a dataset of natural images ","(","1000 classes",")"," with over 1.3 million images. It is about 100GB in size."),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(8765).Z})),(0,i.kt)("p",null,"The challenges of working with ImageNet are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Scaling huge datasets across distributed workloads"),(0,i.kt)("li",{parentName:"ul"},"Prototyping models interactively with such a large dataset"),(0,i.kt)("li",{parentName:"ul"},"Scaling up models to run through ImageNet quickly")),(0,i.kt)("h2",{id:"step-1-get-imagenet"},"Step 1: Get ImageNet"),(0,i.kt)("p",null,"If you already have ImageNet, ",(0,i.kt)("strong",{parentName:"p"},"SKIP THIS STEP")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Make sure you have permission to use ImageNet"))),(0,i.kt)("h3",{id:"a-start-an-interactive-session"},"A: Start an Interactive Session"),(0,i.kt)(o.Z,{src:"https://grid-docs.s3.us-east-2.amazonaws.com/screen_3.mp4",mdxType:"Video"}),(0,i.kt)("p",null,"We'll use JupyterLab for simplicity but you can also directly link VSCode or ssh into the session from your laptop."),(0,i.kt)("h3",{id:"b-open-jupyterlab-on-the-session"},"B: Open JupyterLab on the Session"),(0,i.kt)("p",null,"It's a good practice to use screen for long-running processes."),(0,i.kt)("p",null,"Open a new terminal"),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(1847).Z})),(0,i.kt)("p",null,"Start screen so you can do the download in the background."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# install screen\nsudo apt-get install screen\n\n# start screen\nscreen -S train_download\n")),(0,i.kt)("h3",{id:"c-download-imagenet"},(0,i.kt)("strong",{parentName:"h3"},"C: Download ImageNet")),(0,i.kt)("p",null,"Make sure you first have access to ImageNet ","(","request access ",(0,i.kt)("a",{parentName:"p",href:"http://www.image-net.org/signup.php?next=download-images"},"here"),")","."),(0,i.kt)("p",null,"Now login ",(0,i.kt)("a",{parentName:"p",href:"http://www.image-net.org/login"},"here"),", and navigate ",(0,i.kt)("a",{parentName:"p",href:"http://www.image-net.org/challenges/LSVRC/2012/2012-downloads"},"here")," to see the download links. Download those links:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# download training data\nwget http://PASTE_REAL_URL_HERE/ILSVRC2012_img_train.tar\n\n# download validation data\nwget http://PASTE_REAL_URL_HERE/ILSVRC2012_img_val.tar\n")),(0,i.kt)("p",null,"You can safely close the Jupyter browser tab while the download happens. Once it's done, come back here."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Download takes about 4 hours"))),(0,i.kt)("h3",{id:"c-process-imagenet"},(0,i.kt)("strong",{parentName:"h3"},"C: Process ImageNet")),(0,i.kt)("p",null,"ImageNet needs to be processed. Use the following script ","(",(0,i.kt)("a",{parentName:"p",href:"https://gist.github.com/BIGBALLON/8a71d225eff18d88e469e6ea9b39cef4"},"source"),")","."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# downloads and starts a script to process ImageNet\nwget -O - http://bit.ly/imagenet_process | bash\n")),(0,i.kt)("p",null,"This will create two folders ","(","train, val",")",". Put them both under a single folder"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# create a folder with the train and val splits\nmkdir imagenet_2012\nmv train imagenet_2012/\nmv val imagenet_2012/\n")),(0,i.kt)("p",null,"Download the meta.bin file and move it to the imagenet","_","2012 folder"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# get the meta.bin (an index of files) and move to the dataset folder\nwget https://grid-docs.s3.us-east-2.amazonaws.com/meta.bin\n\n# copy into each folder\ncp meta.bin imagenet_2012/train\ncp meta.bin imagenet_2012/val\n")),(0,i.kt)("p",null,"that's it! In the next step we'll upload ImageNet."),(0,i.kt)("h2",{id:"step-2-imagenet-datastore"},"Step 2: ImageNet Datastore"),(0,i.kt)("p",null,"Now let's upload and optimize ImageNet. We'll create a datastore that will make the dataset available at low-latency to every job we ever run using the dataset."),(0,i.kt)("h3",{id:"from-a-session"},"From a Session"),(0,i.kt)("p",null,"If you followed the previous step, you now have a folder with ImageNet processed. Uploading is trivial. Simply type:"),(0,i.kt)("p",null,"make sure you're in a screen Session"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"screen -S upload\n")),(0,i.kt)("p",null,"now upload the datastore"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"grid datastores create --source imagenet_2012 --name imagenet-2012\n")),(0,i.kt)("h3",{id:"from-cluster-or-own-machine"},"From cluster or own machine"),(0,i.kt)("p",null,"Most likely your copy of ImageNet lives on a cluster or your local machine. Either way, the process is the same."),(0,i.kt)("h4",{id:"open-your-terminal-and-start-a-screen-session"},"Open your terminal and start a screen session."),(0,i.kt)("p",null,"Screen will let this job run in the background."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"screen -S upload\n")),(0,i.kt)("p",null,"If you're on a cluster, request an interactive machine ","(",(0,i.kt)("strong",{parentName:"p"},"after")," starting screen",")",". Here's an example using SLURM."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"srun --qos=batch --mem-per-cpu=10000 --ntasks=4 --time=12:00:00 --pty bash\n")),(0,i.kt)("p",null,"Install and log into grid ","(","get your username and ssh keys from the ",(0,i.kt)("a",{parentName:"p",href:"https://platform.grid.ai/#/settings"},"settings page"),")","."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# install\npip install lightning-grid --upgrade\n\n# login\ngrid login --username YOUR_USERNAME --key YOUR_KEY\n")),(0,i.kt)("p",null,"Create the ImageNet Datastore"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"grid datastores create --source PATH/TO/imagenet --name imagenet-2012\n")),(0,i.kt)("p",null,"You can safely disconnect from the cluster ","(","make sure you are using screen",")"," while the upload happens. This will take a few hours depending on your cluster's internet connection."),(0,i.kt)("h2",{id:"the-model"},"The Model"),(0,i.kt)("p",null,"You can do hyperparameter sweep over different model backbones to find the best one for ImageNet."),(0,i.kt)("p",null,"The hardest part here is getting the data into the system. Using Lightning with Grid makes it trivial to scale up on ImageNet."),(0,i.kt)("p",null,"Grid supports other machine learning frameworks as long as your code supports multi-GPU and multi-node training. Let us know if you would like to contribute sample code for Imagenet training"))}u.isMDXComponent=!0},8765:function(e,t,a){t.Z=a.p+"assets/images/imagenet-images-deac7150c7f89b0f3bb4fee84a7e59d4.png"},1847:function(e,t,a){t.Z=a.p+"assets/images/session-terminal-b1b61bcf583dc6d3985202b3302b323b.png"}}]);